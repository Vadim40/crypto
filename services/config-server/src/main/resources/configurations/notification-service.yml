spring:
  data:
    mongodb:
      username: user
      password: pass
      host: localhost
      port: 27017
      database: notification
      authentication-database: admin

  mail:
    host: localhost
    port: 1025
    username: user
    password: pass
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  kafka:
    consumer:
      bootstrap-servers: localhost:9092, localhost:9093
      group-id: notificationGroup
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: |
          accountCreationEvent:com.example.notification.Kafka.DTOs.AccountCreationEvent,
          userLoginEvent:com.example.notification.Kafka.DTOs.UserLoginEvent,
          transactionConfirmation:com.example.notification.Kafka.DTOs.TransactionConfirmation,
          otpVerification:com.example.notification.Kafka.DTOs.OtpVerification
      auto-offset-reset: earliest
    properties:
      spring:
        jackson:
          serialization:
            WRITE_DATES_AS_TIMESTAMPS: false

server:
  port: 8050

